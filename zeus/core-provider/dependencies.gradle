dependencies {
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    // Never use "compile" scope, but make all dependencies either 'implementation', 'runtimeOnly' or 'testCompile'.
    // Note that we never use 'api', because Fineract at least currently is a simple monolithic application ("WAR"), not a library.
    // We also (normally should have) no need to ever use 'compileOnly'.

    // implementation dependencies are directly used (compiled against) in src/main (and src/test)
    //
    implementation(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-cache',
            'org.springframework.boot:spring-boot-starter-oauth2-resource-server',
            'javax.persistence:javax.persistence-api:2.2', // Use the appropriate version

            'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0',
            'org.glassfish.jersey.media:jersey-media-multipart:3.1.3',
            'org.springframework:spring-jms:5.3.31',
            'org.springframework:spring-context-support',

            'com.google.guava:guava',
            'com.google.code.gson:gson',

            'jakarta.jms:jakarta.jms-api:2.0.3',
            'jakarta.management.j2ee:jakarta.management.j2ee-api',

            'com.squareup.retrofit2:retrofit',
            'com.squareup.okhttp3:okhttp',
            'com.squareup.okhttp3:okhttp-urlconnection',

            'org.apache.commons:commons-lang3',
            'commons-io:commons-io:2.15.1',
            'org.apache.poi:poi:5.2.5',
            'org.apache.poi:poi-ooxml:5.2.5',
            'org.apache.tika:tika-core',

            'org.liquibase:liquibase-core',

            'com.github.librepdf:openpdf',
            'com.github.spullara.mustache.java:compiler',
            'com.jayway.jsonpath:json-path',

            'javax.cache:cache-api',

            'com.github.spotbugs:spotbugs-annotations',
//            'io.swagger.core.v3:swagger-annotations',
//            'io.swagger.core.v3:swagger-annotations-jakarta:2.2.20',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0',

            'com.squareup.retrofit2:converter-gson',
            'com.sun.activation:jakarta.activation',
            'com.sun.mail:jakarta.mail:2.0.1',

//            'org.springdoc:springdoc-openapi-ui',
//            'org.springdoc:springdoc-openapi-common',
//            'org.springdoc:springdoc-openapi-security',
//             'org.postgresql:postgresql:42.7.2',
            'org.decampo:xirr:1.2',
            'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.4',
//            'net.sf.jasperreports:jasperreports:6.20.5',
//            'net.sourceforge.dynamicreports:dynamicreports:1.3.0',
             'org.apache.logging.log4j:log4j-core:2.20.0' // Error occurs while uploading bulk loan so added the dependency
    )

    implementation('io.swagger.core.v3:swagger-annotations-jakarta:2.2.21'){
        exclude group: "jakarta.ws.rs", module: "jakarta.ws.rs-api"
        exclude group: "org.testng", module: "testng"
    }
    implementation("net.sourceforge.dynamicreports:dynamicreports:1.3.0"){
        exclude group: "org.apache.poi", module: "poi"
        exclude group: "org.apache.xmlgraphics", module: "batik-bridge"
        exclude group: "org.jfree", module: "jfreechart"
    }
    implementation("org.apache.commons:commons-compress:1.26.1")

    implementation('com.nimbusds:nimbus-jose-jwt:9.37.3'){
        exclude group: 'org.bitbucket.b_c', module:'jose4j'
    }

    implementation('net.sf.jasperreports:jasperreports:6.20.5'){
        exclude group: 'org.apache.xmlgraphics', module: 'batik-bridge'
        exclude group: 'org.jfree', module:  'jcommon'
    }

    implementation('io.swagger.core.v3:swagger-core-jakarta:2.2.21')

    implementation ('org.apache.commons:commons-email') {
        exclude group: 'com.sun.mail', module: 'javax.mail'
        exclude group: 'javax.activation', module: 'activation'
    }

    implementation 'io.swagger.core.v3:swagger-jaxrs2-jakarta:2.2.21'
    implementation 'org.yaml:snakeyaml:2.2'

    implementation('org.springframework.boot:spring-boot-starter-jersey') {
        exclude group: 'org.glassfish.hk2.external', module: 'aopalliance-repackaged'
        exclude group: 'org.glassfish.hk2', module: 'hk2-runlevel'
      //  exclude group: 'org.hibernate.validator', module: 'hibernate-validator'
        exclude group: 'jakarta.activation', module: 'jakarta.activation-api'
    }
    implementation('org.dom4j:dom4j') {
        exclude group: 'javax.xml.bind'
    }
    implementation ('jakarta.xml.bind:jakarta.xml.bind-api:4.0.0') {
        exclude group: 'jakarta.activation'
    }

    implementation ('org.apache.activemq:activemq-broker:6.0.1') {
        exclude group: 'org.apache.geronimo.specs'
        exclude group: 'javax.annotation', module: 'javax.annotation-api'
    }
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.hibernate'
        exclude group: 'org.postgresql'
    }
    implementation('org.eclipse.persistence:org.eclipse.persistence.jpa') {
        exclude group: 'org.eclipse.persistence', module: 'jakarta.persistence'
    }
    implementation ('org.quartz-scheduler:quartz') {
        exclude group: 'com.zaxxer', module: 'HikariCP-java7'
    }
    implementation ('com.amazonaws:aws-java-sdk-s3') {
        exclude group: 'commons-logging'
    }
    implementation ('org.mnode.ical4j:ical4j') {
        exclude group: 'commons-logging'
        exclude group: 'javax.activation'
        exclude group: 'com.sun.mail', module: 'javax.mail'
        exclude group: 'org.jparsec', module: 'jparsec'
    }

    implementation ('org.ehcache:ehcache') {
        exclude group: 'com.sun.activation'
    }

    implementation('org.owasp.esapi:esapi') {
        exclude group: 'org.slf4j'
        exclude group: 'log4j'
        exclude group: 'commons-logging'
        exclude group: 'commons-collections'
        exclude group: 'commons-lang'
        exclude group: 'spotbugs-annotations'
        exclude group: 'xml-apis'
        exclude group: 'org.owasp.antisamy'
        exclude group: 'xerces', module:'xercesImpl'\
        exclude group: 'commons-configuration'
    }
    implementation("org.owasp.antisamy:antisamy:1.7.5"){
        exclude group: 'xerces', module:'xercesImpl'
    }

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'

    runtimeOnly('org.glassfish.jaxb:jaxb-runtime') {
        exclude group: 'com.sun.activation'
    }

    // runtimeOnly dependencies are things that Fineract code has no direct compile time dependency on, but which must be present at run-time
    runtimeOnly(
            'org.apache.bval:org.apache.bval.bundle',
            'org.springframework.boot:spring-boot-starter-actuator',

            // Although fineract (at the time of writing) doesn't have any compile time dep. on httpclient,
            // it's useful to have this for the Spring Boot TestRestTemplate http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#boot-features-rest-templates-test-utility
            'org.apache.httpcomponents:httpclient'
            )

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


}
