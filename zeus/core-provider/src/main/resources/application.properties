application.title=Zeus LMS

lms.node-id=${LMS_NODE_ID:1}

lms.security.basicauth.enabled=${LMS_SECURITY_BASICAUTH_ENABLED:true}
lms.security.oauth.enabled=${LMS_SECURITY_OAUTH_ENABLED:false}
lms.security.2fa.enabled=${LMS_SECURITY_2FA_ENABLED:false}

lms.tenant.host=${LMS_DEFAULT_TENANTDB_HOSTNAME:localhost}
lms.tenant.port=${LMS_DEFAULT_TENANTDB_PORT:3306}
lms.tenant.username=${LMS_DEFAULT_TENANTDB_UID:root}
lms.tenant.password=${LMS_DEFAULT_TENANTDB_PWD:mysql}
lms.tenant.parameters=${LMS_DEFAULT_TENANTDB_CONN_PARAMS:}
lms.tenant.timezone=${LMS_DEFAULT_TENANTDB_TIMEZONE:Asia/Kolkata}
lms.tenant.identifier=${LMS_DEFAULT_TENANTDB_IDENTIFIER:zeus-colending}
lms.tenant.name=${LMS_DEFAULT_TENANTDB_NAME:zeus_colending}
lms.tenant.description=${LMS_DEFAULT_TENANTDB_DESCRIPTION:Default Demo Tenant}

lms.mode.read-enabled=${LMS_MODE_READ_ENABLED:true}
lms.mode.write-enabled=${LMS_MODE_WRITE_ENABLED:true}
lms.mode.batch-enabled=${LMS_MODE_BATCH_ENABLED:true}

management.health.jms.enabled=false

# LMS 1296
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# LMS-883
management.info.git.mode=FULL
management.endpoints.web.exposure.include=health,info

# LMS-914
server.forward-headers-strategy=framework
server.port=${LMS_SERVER_PORT:8443}
server.servlet.context-path=${LMS_SERVER_SERVLET_CONTEXT_PATH:/lms}
server.compression.enabled=${LMS_SERVER_COMPRESSION_ENABLED:true}

server.ssl.enabled=${LMS_SERVER_SSL_ENABLED:false}
server.ssl.protocol=TLS
#server.ssl.ciphers=${LMS_SERVER_SSL_CIPHERS:TLS_RSA_WITH_AES_128_CBC_SHA256}
#server.ssl.enabled-protocols=${LMS_SERVER_SSL_PROTOCOLS:TLSv1.2}
server.ssl.key-store=${LMS_SERVER_SSL_KEY_STORE:classpath:keystore.jks}
server.ssl.key-store-password=${LMS_SERVER_SSL_KEY_STORE_PASSWORD:openmf}

server.tomcat.accept-count=${LMS_SERVER_TOMCAT_ACCEPT_COUNT:100}
server.tomcat.accesslog.enabled=${LMS_SERVER_TOMCAT_ACCESSLOG_ENABLED:false}
server.tomcat.max-connections=${LMS_SERVER_TOMCAT_MAX_CONNECTIONS:8192}
server.tomcat.max-http-form-post-size=${LMS_SERVER_TOMCAT_MAX_HTTP_FORM_POST_SIZE:2MB}
server.tomcat.max-keep-alive-requests=${LMS_SERVER_TOMCAT_MAX_KEEP_ALIVE_REQUESTS:100}
server.tomcat.threads.max=${LMS_SERVER_TOMCAT_THREADS_MAX:200}
server.tomcat.threads.min-spare=${LMS_SERVER_TOMCAT_THREADS_MIN_SPARE:10}

# OAuth authorisation server endpoint
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://10.100.10.32:8080/auth/realms/zeus

spring.datasource.hikari.driverClassName=${LMS_HIKARI_DRIVER_SOURCE_CLASS_NAME:org.mariadb.jdbc.Driver}
spring.datasource.hikari.jdbcUrl=${LMS_HIKARI_JDBC_URL:jdbc:mariadb://localhost:3306/zeus_colending}
spring.datasource.hikari.username=${lms.tenant.username}
spring.datasource.hikari.password=${lms.tenant.password}
spring.datasource.hikari.minimumIdle=${LMS_HIKARI_MINIMUM_IDLE:3}
spring.datasource.hikari.maximumPoolSize=${LMS_HIKARI_MAXIMUM_POOL_SIZE:10}
spring.datasource.hikari.idleTimeout=${LMS_HIKARI_IDLE_TIMEOUT:60000}
spring.datasource.hikari.connectionTimeout=${LMS_HIKARI_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.connectionTestquery=${LMS_HIKARI_TEST_QUERY:SELECT 1}
spring.datasource.hikari.autoCommit=${LMS_HIKARI_AUTO_COMMIT:true}
spring.datasource.hikari.dataSourceProperties['cachePrepStmts']=${LMS_HIKARI_DS_PROPERTIES_CACHE_PREP_STMTS:true}
spring.datasource.hikari.dataSourceProperties['prepStmtCacheSize']=${LMS_HIKARI_DS_PROPERTIES_PREP_STMT_CACHE_SIZE:250}
spring.datasource.hikari.dataSourceProperties['prepStmtCacheSqlLimit']=${LMS_HIKARI_DS_PROPERTIES_PREP_STMT_CACHE_SQL_LIMIT:2048}
spring.datasource.hikari.dataSourceProperties['useServerPrepStmts']=${LMS_HIKARI_DS_PROPERTIES_USE_SERVER_PREP_STMTS:true}
spring.datasource.hikari.dataSourceProperties['useLocalSessionState']=${LMS_HIKARI_DS_PROPERTIES_USE_LOCAL_SESSION_STATE:true}
spring.datasource.hikari.dataSourceProperties['rewriteBatchedStatements']=${LMS_HIKARI_DS_PROPERTIES_REWRITE_BATCHED_STATEMENTS:true}
spring.datasource.hikari.dataSourceProperties['cacheResultSetMetadata']=${LMS_HIKARI_DS_PROPERTIES_CACHE_RESULT_SET_METADATA:true}
spring.datasource.hikari.dataSourceProperties['cacheServerConfiguration']=${LMS_HIKARI_DS_PROPERTIES_CACHE_SERVER_CONFIGURATION:true}
spring.datasource.hikari.dataSourceProperties['elideSetAutoCommits']=${LMS_HIKARI_DS_PROPERTIES_ELIDE_SET_AUTO_COMMITS:true}
spring.datasource.hikari.dataSourceProperties['maintainTimeStats']=${LMS_HIKARI_DS_PROPERTIES_MAINTAIN_TIME_STATS:false}
# https://github.com/brettwooldridge/HikariCP/wiki/JDBC-Logging#mysql-connectorj
# TODO LMS-890: <prop key="logger">com.mysql.cj.log.Slf4JLogger</prop>
spring.datasource.hikari.dataSourceProperties['logSlowQueries']=${LMS_HIKARI_DS_PROPERTIES_LOG_SLOW_QUERIES:true}
spring.datasource.hikari.dataSourceProperties['dumpQueriesOnException']=${LMS_HIKARI_DS_PROPERTIES_DUMP_QUERIES_IN_EXCEPTION:true}
spring.jpa.open-in-view=false

# Liquibase configuration
spring.liquibase.enabled=true
spring.liquibase.changeLog=classpath:/db/changelog/db.changelog-master.xml

spring.liquibase.parameters.lms.tenant.identifier=${lms.tenant.identifier}
spring.liquibase.parameters.lms.tenant.description=${lms.tenant.description}
spring.liquibase.parameters.lms.tenant.timezone=${lms.tenant.timezone}
spring.liquibase.parameters.lms.tenant.schema-name=${lms.tenant.name}
spring.liquibase.parameters.lms.tenant.host=${lms.tenant.host}
spring.liquibase.parameters.lms.tenant.port=${lms.tenant.port}
spring.liquibase.parameters.lms.tenant.username=${lms.tenant.username}
spring.liquibase.parameters.lms.tenant.password=${lms.tenant.password}
spring.liquibase.parameters.lms.tenant.parameters=${lms.tenant.parameters}

springdoc.api-docs.path=${SPRINGDOC_API_DOCS_PATH:/api-docs}
springdoc.api-docs.enabled=${SPRINGDOC_API_DOCS_ENABLED:true}
springdoc.swagger-ui.enabled=${SPRINGDOC_SWAGGER_UI_ENABLED:true}
springdoc.swagger-ui.display-query-params=true
springdoc.swagger-ui.url=/lms.json
springdoc.packagesToScan=org.vcpl.lms
springdoc.pathsToMatch=/api/**
springdoc.use-management-port=${SPRINGDOC_USE_MANAGEMENT_PORT:false}
springdoc.show-actuator=${SPRINGDOC_SHOW_ACTUATOR:false}

spring.web.resources.static-locations=classpath:/static/

# VPay Configuration
zeus.vpay-transaction.enquiry.every = 30
vpay.keystore.password = vpay@123
vpay.access.url = https://vpayuat.vnt.vivriticapital.com:9080
vpay.keystore.url=/home/ec2-user/zeus-certificate/zeus.jks

zeus.encryption.iv=wrxq0zs1!bna3gme
zeus.encryption.salt=9!f8tjz5oesh^l32
zeus.encryption.password=&t96r5$e41pqx!gn
zeus.encryption.secretkey=fv2IFESZ0GusMZVY

# Scheduler Failure Alert Email Configuration
scheduler.alert.mail.isEnable=false
scheduler.alert.mail.username=info@vivriticapital.com
scheduler.alert.mail.password=A1@Mem0()$42kW24@
scheduler.alert.mail.host=Smtp.office365.com
scheduler.alert.mail.port=587
scheduler.alert.mail.useTLS=true
scheduler.alert.mail.environment=local
multiple.tenant.configuration=zeus-colending
# Connection relation details
tenant.configuration.zeus-colending.connection.connectionId = 1
tenant.configuration.zeus-colending.connection.schemaName = zeus_colending
tenant.configuration.zeus-colending.connection.schemaServer = ${lms.tenant.host}
tenant.configuration.zeus-colending.connection.schemaServerPort = ${lms.tenant.port}
tenant.configuration.zeus-colending.connection.schemaUsername =${lms.tenant.username}
tenant.configuration.zeus-colending.connection.schemaPassword =${lms.tenant.password}
tenant.configuration.zeus-colending.connection.autoUpdateEnabled = true
tenant.configuration.zeus-colending.connection.initialSize = 5
tenant.configuration.zeus-colending.connection.validationInterval = 30000
tenant.configuration.zeus-colending.connection.removeAbandoned = true
tenant.configuration.zeus-colending.connection.removeAbandonedTimeout = 60
tenant.configuration.zeus-colending.connection.logAbandoned = true
tenant.configuration.zeus-colending.connection.abandonWhenPercentageFull=50
tenant.configuration.zeus-colending.connection.maxActive = 40
tenant.configuration.zeus-colending.connection.minIdle = 20
tenant.configuration.zeus-colending.connection.maxIdle = 10
tenant.configuration.zeus-colending.connection.suspectTimeout = 60
tenant.configuration.zeus-colending.connection.timeBetweenEvictionRunsMillis = 34000
tenant.configuration.zeus-colending.connection.minEvictableIdleTimeMillis = 60000
tenant.configuration.zeus-colending.connection.maxRetriesOnDeadlock = 0
tenant.configuration.zeus-colending.connection.maxIntervalBetweenRetries = 1
tenant.configuration.zeus-colending.connection.testOnBorrow = true
# Common tenant details
tenant.configuration.zeus-colending.tenantIdentifier=zeus-colending
tenant.configuration.zeus-colending.name=Zeus Colending Tenant
tenant.configuration.zeus-colending.timezoneId=${lms.tenant.timezone}
tenant.configuration.zeus-colending.id=1
# Spring Security Config
spring.main.allow-bean-definition-overriding=true

##Keycloak_Configuration
#keycloak.client_id=community-app
#keycloak.client_secret=vUbyUAVUwgrQhvKazO9myLncPqSYrcx1
#keycloak.token_url=http://localhost:8080/realms/zeus/protocol/openid-connect/token
#keycloak.admin.token_url=http://localhost:8080/realms/master/protocol/openid-connect/token
#keycloak.admin.username=admin
#keycloak.admin.password=admin
#keycloak.admin.client_id=admin-cli
#keycloak.admin.user_url=http://localhost:8080/admin/realms/zeus/users
#keycloak.logout_url=http://localhost:8080/realms/zeus/protocol/openid-connect/logout

#Keycloak_QA_Configuration
keycloak.client_id=zeus-lms
keycloak.client_secret=oXilufohm9co98s5xS0vZleL3xWG2j7x
keycloak.token_url=http://10.100.10.32:8080/auth/realms/zeus/protocol/openid-connect/token
keycloak.admin.token_url=http://10.100.10.32:8080/auth/realms/master/protocol/openid-connect/token
keycloak.admin.username=anishkumar.j
keycloak.admin.password=65ppaPPIy@8O
keycloak.admin.client_id=admin-cli
keycloak.admin.user_url=http://10.100.10.32:8080/auth/admin/realms/zeus/users
keycloak.logout_url=http://10.100.10.32:8080/auth/realms/zeus/protocol/openid-connect/logout